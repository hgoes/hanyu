package main

import (
	"fmt"
	"io"
	"os"

	"github.com/hgoes/hanyu/unihan"
)

func main() {
	charDB, err := unihan.Open("../Unihan.zip")
	if err != nil {
		panic(err)
	}
	wr, err := os.Create("gen.go")
	if err != nil {
		panic(err)
	}
	if _, err := wr.WriteString(
		"// Code generated by gen-numbers; DO NOT EDIT.\n" +
			"package numbers\n\n" +
			"var All = map[rune]int64{\n" +
			"\t'ã€‡': 0,\n"); err != nil {
		panic(err)
	}
	entries := charDB.Get(
		unihan.PrimaryNumeric,
		unihan.AccountingNumeric,
		unihan.OtherNumeric)
	for {
		r, field, err := entries.Next()
		if err != nil {
			if err == io.EOF {
				break
			}
			panic(err)
		}
		var num int64
		switch sub := field.(type) {
		case *unihan.PrimaryNumericF:
			num = int64(*sub)
		case *unihan.AccountingNumericF:
			num = int64(*sub)
		case *unihan.OtherNumericF:
			num = int64(*sub)
		default:
			panic(sub)
		}
		if _, err := fmt.Fprintf(wr, "\t%q: %d,\n", r, num); err != nil {
			panic(err)
		}
	}
	if _, err := wr.WriteString("}\n"); err != nil {
		panic(err)
	}
	if err := wr.Close(); err != nil {
		panic(err)
	}
}
